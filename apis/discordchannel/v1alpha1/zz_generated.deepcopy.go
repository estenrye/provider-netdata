//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannel) DeepCopyInto(out *DiscordChannel) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannel.
func (in *DiscordChannel) DeepCopy() *DiscordChannel {
	if in == nil {
		return nil
	}
	out := new(DiscordChannel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiscordChannel) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelInitParameters) DeepCopyInto(out *DiscordChannelInitParameters) {
	*out = *in
	if in.ChannelThread != nil {
		in, out := &in.ChannelThread, &out.ChannelThread
		*out = new(string)
		**out = **in
	}
	if in.ChannelType != nil {
		in, out := &in.ChannelType, &out.ChannelType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RepeatNotificationMin != nil {
		in, out := &in.RepeatNotificationMin, &out.RepeatNotificationMin
		*out = new(float64)
		**out = **in
	}
	if in.RoomsID != nil {
		in, out := &in.RoomsID, &out.RoomsID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpaceID != nil {
		in, out := &in.SpaceID, &out.SpaceID
		*out = new(string)
		**out = **in
	}
	if in.SpaceIDRef != nil {
		in, out := &in.SpaceIDRef, &out.SpaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpaceIDSelector != nil {
		in, out := &in.SpaceIDSelector, &out.SpaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.WebhookURLSecretRef = in.WebhookURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelInitParameters.
func (in *DiscordChannelInitParameters) DeepCopy() *DiscordChannelInitParameters {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelList) DeepCopyInto(out *DiscordChannelList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DiscordChannel, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelList.
func (in *DiscordChannelList) DeepCopy() *DiscordChannelList {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DiscordChannelList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelObservation) DeepCopyInto(out *DiscordChannelObservation) {
	*out = *in
	if in.ChannelThread != nil {
		in, out := &in.ChannelThread, &out.ChannelThread
		*out = new(string)
		**out = **in
	}
	if in.ChannelType != nil {
		in, out := &in.ChannelType, &out.ChannelType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RepeatNotificationMin != nil {
		in, out := &in.RepeatNotificationMin, &out.RepeatNotificationMin
		*out = new(float64)
		**out = **in
	}
	if in.RoomsID != nil {
		in, out := &in.RoomsID, &out.RoomsID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpaceID != nil {
		in, out := &in.SpaceID, &out.SpaceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelObservation.
func (in *DiscordChannelObservation) DeepCopy() *DiscordChannelObservation {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelParameters) DeepCopyInto(out *DiscordChannelParameters) {
	*out = *in
	if in.ChannelThread != nil {
		in, out := &in.ChannelThread, &out.ChannelThread
		*out = new(string)
		**out = **in
	}
	if in.ChannelType != nil {
		in, out := &in.ChannelType, &out.ChannelType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Notifications != nil {
		in, out := &in.Notifications, &out.Notifications
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RepeatNotificationMin != nil {
		in, out := &in.RepeatNotificationMin, &out.RepeatNotificationMin
		*out = new(float64)
		**out = **in
	}
	if in.RoomsID != nil {
		in, out := &in.RoomsID, &out.RoomsID
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SpaceID != nil {
		in, out := &in.SpaceID, &out.SpaceID
		*out = new(string)
		**out = **in
	}
	if in.SpaceIDRef != nil {
		in, out := &in.SpaceIDRef, &out.SpaceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SpaceIDSelector != nil {
		in, out := &in.SpaceIDSelector, &out.SpaceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	out.WebhookURLSecretRef = in.WebhookURLSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelParameters.
func (in *DiscordChannelParameters) DeepCopy() *DiscordChannelParameters {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelSpec) DeepCopyInto(out *DiscordChannelSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelSpec.
func (in *DiscordChannelSpec) DeepCopy() *DiscordChannelSpec {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscordChannelStatus) DeepCopyInto(out *DiscordChannelStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscordChannelStatus.
func (in *DiscordChannelStatus) DeepCopy() *DiscordChannelStatus {
	if in == nil {
		return nil
	}
	out := new(DiscordChannelStatus)
	in.DeepCopyInto(out)
	return out
}
